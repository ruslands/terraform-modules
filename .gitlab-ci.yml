default:
  image: registry.gitlab.com/gitlab-org/terraform-images/releases/1.4:v1.0.0

variables:
  TF_INIT_FLAGS: "-lockfile=readonly"
  TF_PROJECT: terraform-infra
  TF_PARALLELISM: 15
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${TF_PROJECT}


stages:
  - prepare
  - gate
  - build
  - deploy

.only_default_branch:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.only_mr_and_default_branch:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - !reference [.only_default_branch, rules]

.terraform:
  cache:
    key: $CI_COMMIT_REF_NAME-terraform
    paths:
      - .terraform
    policy: pull
  before_script:
    - echo "$TF_SECRETS" | base64 -d > $CI_PROJECT_DIR/secrets.auto.tfvars

terrafrom:init:
  stage: prepare
  extends:
    - .terraform
    - .only_mr_and_default_branch
  cache:
    policy: pull-push
  script:
    - gitlab-terraform init

terraform:lint:
  stage: gate
  extends:
    - .terraform
    - .only_mr_and_default_branch
  before_script: []
  script:
    - gitlab-terraform fmt -check -diff -write=false

terraform:validate:
  stage: gate
  extends:
    - .terraform
    - .only_mr_and_default_branch
  script:
    - gitlab-terraform validate

terraform:plan:
  stage: build
  extends:
    - .terraform
    - .only_mr_and_default_branch
  script:
    - gitlab-terraform plan -lock=false -parallelism=$TF_PARALLELISM
    - gitlab-terraform plan-json
  artifacts:
    paths:
      - plan.cache
    reports:
      terraform: plan.json

terraform:apply:
  stage: deploy
  extends:
    - .terraform
    - .only_default_branch
  environment:
    name: dev
  script:
    - gitlab-terraform apply -parallelism=$TF_PARALLELISM
  allow_failure: false
  when: manual
